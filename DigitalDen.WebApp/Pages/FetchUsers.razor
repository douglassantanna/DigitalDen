@page "/fetchusers"
@using HttpServices.Users.Enums
@inject HttpServices.Users.UserApiClient UserClient;

<PageTitle>Users</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">Users</MudText>
<MudButton Variant="Variant.Filled">Add user</MudButton>
@if (users == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="users" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh>
                <MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<ViewUser, object>(x=>x.Id)">#
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<ViewUser, object>(x=>x.Name)">Name</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<ViewUser, object>(x=>x.Email)">Email</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<ViewUser, object>(x=>x.Role)">Role</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<ViewUser, object>(x=>x.CreatedDate)">CreatedDate</MudTableSortLabel>
            </MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="#">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Email">@context.Email</MudTd>
            <MudTd DataLabel="Role">@(context.Role == ERole.Admin ? "Admin" : "User")</MudTd>
            <MudTd DataLabel="CreatedDate">@context.CreatedDate</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}

@code {

    private List<ViewUser> users = new List<ViewUser>();
    protected override async Task OnInitializedAsync()
    {
        users = await UserClient.GetUsersAsync();
    }
    public class ViewUser
    {
        public Guid Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public ERole Role { get; set; } = ERole.User;
        public DateTime CreatedDate { get; set; }
    }
}
